package todo.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import todo.domain.TodoDTO;
import todo.util.ConnectionProvider;

public class TodoDAO {
	
	// 자신의 클래스에 인스턴스를 생성
	public static TodoDAO instanse;
	
	// 생성장 private 처리
	private TodoDAO() {}
	
	// 인스턴스를 가져올 수 있는 메서드 구현
	public static TodoDAO getInstance() {
		if(instanse == null) {
			instanse = new TodoDAO();
		}
		return instanse;
	}
	
	// TodoDTO 리스트를 반환하는 메서드
	public List<TodoDTO> getTodoDTO(Connection conn) {
		PreparedStatement pstmt = null;
		List<TodoDTO> result = null;
		ResultSet rs = null;
		
		try {
			String sql = "select * from tbl_todo";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			result = new ArrayList<TodoDTO>();
			
			while(rs.next()) {
				int tno =rs.getInt("tno");
				String todo =rs.getString("todo");
				String duedate =rs.getString("duedate");
				Boolean finish = rs.getBoolean("finished");
				
				result.add(new TodoDTO(tno, todo, duedate, finish));
			}
			
		} catch(SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(rs != null) {
					rs.close();
				}
				if(pstmt != null) {
					pstmt.close();
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		
		return result;
	}
	
	public static void main(String[] args) throws SQLException {
		TodoDAO dao = TodoDAO.getInstance();
		Connection conn = ConnectionProvider.get();
		
		List<TodoDTO> Tododto = dao.getTodoDTO(conn);
		for(var a : Tododto) {
			System.out.println(a.toString());
		}
	}
}
